// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Log a new high score for a user
pub struct SubmitScoreEvent;

            impl ::aws_smithy_http_server::operation::OperationShape for SubmitScoreEvent {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#SubmitScoreEvent", "kotlinconf", "SubmitScoreEvent");

                type Input = crate::input::SubmitScoreEventInput;
                type Output = crate::output::SubmitScoreEventOutput;
                type Error = crate::error::SubmitScoreEventError;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for SubmitScoreEvent {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


/// Delete a leaderboard
pub struct DeleteLeaderboard;

            impl ::aws_smithy_http_server::operation::OperationShape for DeleteLeaderboard {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#DeleteLeaderboard", "kotlinconf", "DeleteLeaderboard");

                type Input = crate::input::DeleteLeaderboardInput;
                type Output = crate::output::DeleteLeaderboardOutput;
                type Error = crate::error::DeleteLeaderboardError;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for DeleteLeaderboard {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


/// Update a leaderboard's configuration
pub struct UpdateLeaderboard;

            impl ::aws_smithy_http_server::operation::OperationShape for UpdateLeaderboard {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#UpdateLeaderboard", "kotlinconf", "UpdateLeaderboard");

                type Input = crate::input::UpdateLeaderboardInput;
                type Output = crate::output::UpdateLeaderboardOutput;
                type Error = crate::error::UpdateLeaderboardError;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for UpdateLeaderboard {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


/// Get detailed information about a specific leaderboard including it's high scores
pub struct GetLeaderboard;

            impl ::aws_smithy_http_server::operation::OperationShape for GetLeaderboard {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#GetLeaderboard", "kotlinconf", "GetLeaderboard");

                type Input = crate::input::GetLeaderboardInput;
                type Output = crate::output::GetLeaderboardOutput;
                type Error = crate::error::GetLeaderboardError;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for GetLeaderboard {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


/// Create a new leaderboard
pub struct CreateLeaderboard;

            impl ::aws_smithy_http_server::operation::OperationShape for CreateLeaderboard {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#CreateLeaderboard", "kotlinconf", "CreateLeaderboard");

                type Input = crate::input::CreateLeaderboardInput;
                type Output = crate::output::CreateLeaderboardOutput;
                type Error = crate::error::CreateLeaderboardError;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for CreateLeaderboard {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


/// List the available leaderboards
pub struct ListLeaderboards;

            impl ::aws_smithy_http_server::operation::OperationShape for ListLeaderboards {
                const ID: ::aws_smithy_http_server::shape_id::ShapeId = ::aws_smithy_http_server::shape_id::ShapeId::new("kotlinconf#ListLeaderboards", "kotlinconf", "ListLeaderboards");

                type Input = crate::input::ListLeaderboardsInput;
                type Output = crate::output::ListLeaderboardsOutput;
                type Error = std::convert::Infallible;
            }

            impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for ListLeaderboards {
                type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
                        ::aws_smithy_http_server::instrumentation::MakeIdentity,
                        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
                            ::aws_smithy_http_server::instrumentation::MakeIdentity,
                            ::aws_smithy_http_server::instrumentation::MakeIdentity
                        >
                    >;
                type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<::aws_smithy_http_server::instrumentation::MakeIdentity, ::aws_smithy_http_server::instrumentation::MakeIdentity>;

                fn request_fmt() -> Self::RequestFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
                }

                fn response_fmt() -> Self::ResponseFmt {
                    ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
                }
            }


