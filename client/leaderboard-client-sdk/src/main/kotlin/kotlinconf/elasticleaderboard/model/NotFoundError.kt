// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package kotlinconf.elasticleaderboard.model

import aws.smithy.kotlin.runtime.SdkDsl
import aws.smithy.kotlin.runtime.ServiceErrorMetadata

public class NotFoundError private constructor(builder: Builder) : ElasticLeaderboardException(builder.message) {

    init {
        sdkErrorMetadata.attributes[ServiceErrorMetadata.ErrorType] = ErrorType.Client
    }

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): kotlinconf.elasticleaderboard.model.NotFoundError = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NotFoundError(")
        append("message=$message")
        append(")")
    }

    override fun hashCode(): kotlin.Int {
        var result = message?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NotFoundError

        if (message != other.message) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): kotlinconf.elasticleaderboard.model.NotFoundError = Builder(this).apply(block).build()

    @SdkDsl
    public class Builder {
        public var message: kotlin.String? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: kotlinconf.elasticleaderboard.model.NotFoundError) : this() {
            this.message = x.message
        }

        @PublishedApi
        internal fun build(): kotlinconf.elasticleaderboard.model.NotFoundError = NotFoundError(this)

        internal fun correctErrors(): Builder {
            return this
        }
    }
}
