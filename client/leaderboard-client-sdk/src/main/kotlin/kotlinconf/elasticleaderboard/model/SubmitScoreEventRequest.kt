// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package kotlinconf.elasticleaderboard.model

import aws.smithy.kotlin.runtime.SdkDsl

public class SubmitScoreEventRequest private constructor(builder: Builder) {
    public val id: kotlin.String? = builder.id
    public val scoreEvent: kotlinconf.elasticleaderboard.model.ScoreEvent? = builder.scoreEvent

    public companion object {
        public operator fun invoke(block: Builder.() -> kotlin.Unit): kotlinconf.elasticleaderboard.model.SubmitScoreEventRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SubmitScoreEventRequest(")
        append("id=$id,")
        append("scoreEvent=$scoreEvent")
        append(")")
    }

    override fun hashCode(): kotlin.Int {
        var result = id?.hashCode() ?: 0
        result = 31 * result + (scoreEvent?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SubmitScoreEventRequest

        if (id != other.id) return false
        if (scoreEvent != other.scoreEvent) return false

        return true
    }

    public inline fun copy(block: Builder.() -> kotlin.Unit = {}): kotlinconf.elasticleaderboard.model.SubmitScoreEventRequest = Builder(this).apply(block).build()

    @SdkDsl
    public class Builder {
        public var id: kotlin.String? = null
        public var scoreEvent: kotlinconf.elasticleaderboard.model.ScoreEvent? = null

        @PublishedApi
        internal constructor()
        @PublishedApi
        internal constructor(x: kotlinconf.elasticleaderboard.model.SubmitScoreEventRequest) : this() {
            this.id = x.id
            this.scoreEvent = x.scoreEvent
        }

        @PublishedApi
        internal fun build(): kotlinconf.elasticleaderboard.model.SubmitScoreEventRequest = SubmitScoreEventRequest(this)

        /**
         * construct an [kotlinconf.elasticleaderboard.model.ScoreEvent] inside the given [block]
         */
        public fun scoreEvent(block: kotlinconf.elasticleaderboard.model.ScoreEvent.Builder.() -> kotlin.Unit) {
            this.scoreEvent = kotlinconf.elasticleaderboard.model.ScoreEvent.invoke(block)
        }

        internal fun correctErrors(): Builder {
            return this
        }
    }
}
