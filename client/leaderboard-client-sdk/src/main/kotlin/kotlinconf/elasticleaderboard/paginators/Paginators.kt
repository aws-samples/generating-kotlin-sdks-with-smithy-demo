// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package kotlinconf.elasticleaderboard.paginators

import kotlinconf.elasticleaderboard.ElasticLeaderboardClient
import kotlinconf.elasticleaderboard.model.ListLeaderboardsRequest
import kotlinconf.elasticleaderboard.model.ListLeaderboardsResponse
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flow


/**
 * Paginate over [ListLeaderboardsResponse] results.
 *
 * When this operation is called, a [kotlinx.coroutines.Flow] is created. Flows are lazy (cold) so no service
 * calls are made until the flow is collected. This also means there is no guarantee that the request is valid
 * until then. Once you start collecting the flow, the SDK will lazily load response pages by making service
 * calls until there are no pages left or the flow is cancelled. If there are errors in your request, you will
 * see the failures only after you start collection.
 * @param initialRequest A [ListLeaderboardsRequest] to start pagination
 * @return A [kotlinx.coroutines.flow.Flow] that can collect [ListLeaderboardsResponse]
 */
public fun ElasticLeaderboardClient.listLeaderboardsPaginated(initialRequest: ListLeaderboardsRequest = ListLeaderboardsRequest { }): Flow<ListLeaderboardsResponse> =
    flow {
        var cursor: kotlin.String? = null
        var hasNextPage: Boolean = true

        while (hasNextPage) {
            val req = initialRequest.copy {
                this.nextToken = cursor
            }
            val result = this@listLeaderboardsPaginated.listLeaderboards(req)
            cursor = result.nextToken
            hasNextPage = cursor?.isNotEmpty() == true
            emit(result)
        }
    }

/**
 * Paginate over [ListLeaderboardsResponse] results.
 *
 * When this operation is called, a [kotlinx.coroutines.Flow] is created. Flows are lazy (cold) so no service
 * calls are made until the flow is collected. This also means there is no guarantee that the request is valid
 * until then. Once you start collecting the flow, the SDK will lazily load response pages by making service
 * calls until there are no pages left or the flow is cancelled. If there are errors in your request, you will
 * see the failures only after you start collection.
 * @param block A builder block used for DSL-style invocation of the operation
 * @return A [kotlinx.coroutines.flow.Flow] that can collect [ListLeaderboardsResponse]
 */
public fun ElasticLeaderboardClient.listLeaderboardsPaginated(block: ListLeaderboardsRequest.Builder.() -> Unit): Flow<ListLeaderboardsResponse> =
    listLeaderboardsPaginated(ListLeaderboardsRequest.Builder().apply(block).build())
